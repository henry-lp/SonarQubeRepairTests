--- a/testcases/CodeFactory.java
+++ b/testcases/CodeFactory.java
@@ -4,23 +4,13 @@
  * Spoon is available either under the terms of the MIT License (see LICENSE-MIT.txt) of the Cecill-C License (see LICENSE-CECILL-C.txt). You as the user are entitled to choose the terms under which to adopt Spoon.
  */
 package spoon.reflect.factory;
-
-import spoon.SpoonException;
-import spoon.reflect.code.CtExpression;
-import spoon.reflect.code.CtNewClass;
-import spoon.reflect.declaration.CtClass;
-import spoon.reflect.declaration.CtConstructor;
-import spoon.reflect.declaration.CtType;
-import spoon.reflect.reference.CtTypeReference;
 import java.util.Arrays;
-
+import java.util.function.Function;
+import spoon.reflect.code.CtExpression;
+import spoon.reflect.reference.CtTypeReference;
 public class CodeFactory {
-
-	public void createNewClass(CtExpression<?>...parameters) {
-		Arrays.stream(parameters).map(x -> x.getType());
-		
-		parameters.toString(); // Noncompliant
-	}
-
-}
-
+    public void createNewClass(CtExpression<?>... parameters) {
+        Arrays.stream(parameters).map(( x) -> x.getType());
+        Arrays.toString(parameters);
+    }
+}
\ No newline at end of file
